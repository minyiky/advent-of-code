# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        year: [2021, 2022]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.21'

    - name: Set up gotestfmt
      uses: gotesttools/gotestfmt-action@v2

    - name: Set up fake input files
      working-directory: "${{ matrix.year }}"
      run: |
        go mod tidy
        find ./day* -maxdepth 0 -type d -exec touch {}/input.txt \;

    - name: Test
      working-directory: "${{ matrix.year }}"
      run: |
        set -euo pipefail
        go test -json -v ./day* 2>&1 | gotestfmt | tee /tmp/${{ matrix.year }}_gotest.log

    - name: Update badges
      working-directory: "${{ matrix.year }}"
      run: |
        num_pass=$(cat /tmp/${{ matrix.year }}_gotest.log | grep -c ✅ || test $? = 1)
        num_fail=$(cat /tmp/${{ matrix.year }}_gotest.log | grep -c ❌ || test $? = 1)
        num_tests=$(expr ${num_pass} + ${num_fail})
        perc_passed=$(expr ${num_pass} / ${num_tests})
        
        if [ ${perc_passed} = 1 ]; then
            colour=success
        elif [ ${perc_passed} > 0.5 ]; then
            colour=important
        else
            colour=critical
        fi
        
        sed -i "s/[0-9]\+\/[0-9]\+-[a-z]\+/$num_pass\/${num_tests}-${colour}/" README.md
      

    - uses: stefanzweifel/git-auto-commit-action@v4     # Step that pushes these local changes back to your github repo
      with:
        commit_message: Update ${{ matrix.year }} test badge
        file_pattern: ${{ matrix.year }}/README.md
